apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: jenkins-slave-sonarqube-dotnet-template
message: |-
  A Jenkins server must be instantiated in this project to manage
  the Pipeline BuildConfig created by this template. You will be able to log in to
  it using your OpenShift user credentials.
metadata:
  annotations:
    openshift.io/display-name: sonarqube dotnet jenkins slave template
    description: |-
      This is a template for Sonarqube dotnet jenkins slave.
    iconClass: icon-jenkins
    tags: instant-app,jenkins
  name: jenkins-slave-sonarqube-dotnet-template
parameters:
  - description: The OpenShift Namespace prefix where the ImageStreams reside.
    displayName: Namespace Prefix (Prefix for each namespace ie prefix-tools, prefix-dev etc)
    name: namespacePrefix
    required: true
    value:
  - description: Dotnet version
    displayName: Dotnet version
    name: dotnetVersion
    required: true
    value: "3.1"
  - description: Sonarqube scanner version
    displayName: Sonarqube scanner version
    name: sonarscannerVersion
    required: true
    value: "4.8.0"
objects:
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        app: jenkins-slave-sonarqube-dotnet
      name: jenkins-slave-sonarqube-dotnet
    spec:
      failedBuildsHistoryLimit: 5
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: "jenkins-slave-sonarqube-dotnet:latest"
      postCommit: {}
      resources: {}
      runPolicy: Serial
      source:
        contextDir: openshift/docker-images/sonarqube-dotnet
        git:
          ref: master
          uri: "https://github.com/bcgov/fams3.git"
        type: Git
      strategy:
        dockerStrategy:
          dockerfilePath: Dockerfile
          env:
            - name: SONARQUBE_SCANNER_VERSION
              value: ${sonarscannerVersion}
            - name: DOT_NET_VERSION
              value: ${dotnetVersion}
          from:
            kind: DockerImage
            name: "docker.io/openshift/jenkins-slave-base-centos7:latest"
        type: Docker
      successfulBuildsHistoryLimit: 5
      triggers: []
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        app: jenkins-slave-sonarqube-dotnet
      name: jenkins-slave-sonarqube-dotnet
    spec:
      lookupPolicy:
        local: false
  - apiVersion: v1
    data:
      sonar-dotnet: |-
        <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
          <inheritFrom></inheritFrom>
          <name>sonar-dotnet</name>
          <instanceCap>2147483647</instanceCap>
          <idleMinutes>0</idleMinutes>
          <label>sonar-dotnet</label>
          <serviceAccount>jenkins</serviceAccount>
          <nodeSelector></nodeSelector>
          <volumes/>
          <containers>
            <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              <name>jnlp</name>
              <image>docker-registry.default.svc:5000/${namespacePrefix}-tools/jenkins-slave-sonarqube-dotnet</image>
              <privileged>false</privileged>
              <alwaysPullImage>false</alwaysPullImage>
              <workingDir>/tmp</workingDir>
              <command></command>
              <args>${computer.jnlpmac} ${computer.name}</args>
              <ttyEnabled>false</ttyEnabled>
              <resourceRequestCpu>1</resourceRequestCpu>
              <resourceRequestMemory>1Gi</resourceRequestMemory>
              <resourceLimitCpu>2</resourceLimitCpu>
              <resourceLimitMemory>4Gi</resourceLimitMemory>
              <envVars/>
            </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
          </containers>
          <envVars/>
          <annotations/>
          <imagePullSecrets/>
          <nodeProperties/>
        </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
    kind: ConfigMap
    metadata:
      labels:
        role: jenkins-slave
      name: jenkins-agent-sonar-dotnet
